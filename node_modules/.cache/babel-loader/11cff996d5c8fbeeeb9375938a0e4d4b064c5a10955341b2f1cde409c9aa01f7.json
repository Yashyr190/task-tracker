{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/yashramnani/Desktop/task tracker/src/components/TaskDashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TaskForm from \"./TaskForm\";\nimport TaskList from \"./TaskList\";\nimport TaskFilter from \"./TaskFilter\";\nimport { getTasks, storeTasks } from \"../utils/localStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskDashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [showForm, setShowForm] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  useEffect(() => {\n    const storedTasks = getTasks();\n    setTasks(storedTasks);\n  }, []);\n  useEffect(() => {\n    storeTasks(tasks);\n  }, [tasks]);\n  const addTask = taskData => {\n    const newTask = {\n      id: Date.now(),\n      ...taskData,\n      completed: false,\n      createdAt: new Date().toISOString()\n    };\n    setTasks([newTask, ...tasks]);\n    setShowForm(false);\n  };\n  const updateTask = (taskId, updatedData) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      ...updatedData\n    } : task));\n    setEditingTask(null);\n  };\n  const deleteTask = taskId => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }\n  };\n  const toggleComplete = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === \"completed\") return task.completed;\n    if (filter === \"pending\") return !task.completed;\n    return true;\n  });\n  const taskCounts = {\n    all: tasks.length,\n    completed: tasks.filter(task => task.completed).length,\n    pending: tasks.filter(task => !task.completed).length\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Welcome back, \", user, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Manage your tasks efficiently\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowForm(true),\n          className: \"add-task-btn\",\n          disabled: showForm || editingTask,\n          children: \"+ Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n          currentFilter: filter,\n          onFilterChange: setFilter,\n          taskCounts: taskCounts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(TaskForm, {\n        onSubmit: addTask,\n        onCancel: () => setShowForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 22\n      }, this), editingTask && /*#__PURE__*/_jsxDEV(TaskForm, {\n        task: editingTask,\n        onSubmit: data => updateTask(editingTask.id, data),\n        onCancel: () => setEditingTask(null),\n        isEditing: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        onEdit: setEditingTask,\n        onDelete: deleteTask,\n        onToggleComplete: toggleComplete,\n        currentFilter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDashboard, \"jWlrZTVVeIycvNHbS5EAHwfI63M=\");\n_c = TaskDashboard;\nexport default TaskDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","TaskForm","TaskList","TaskFilter","getTasks","storeTasks","jsxDEV","_jsxDEV","TaskDashboard","user","onLogout","tasks","setTasks","filter","setFilter","showForm","setShowForm","editingTask","setEditingTask","storedTasks","addTask","taskData","newTask","id","Date","now","completed","createdAt","toISOString","updateTask","taskId","updatedData","map","task","deleteTask","window","confirm","toggleComplete","filteredTasks","taskCounts","all","length","pending","className","children","fileName","lineNumber","columnNumber","onClick","disabled","currentFilter","onFilterChange","onSubmit","onCancel","data","isEditing","onEdit","onDelete","onToggleComplete","_c","$RefreshReg$"],"sources":["/Users/yashramnani/Desktop/task tracker/src/components/TaskDashboard.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport TaskForm from \"./TaskForm\"\nimport TaskList from \"./TaskList\"\nimport TaskFilter from \"./TaskFilter\"\nimport { getTasks, storeTasks } from \"../utils/localStorage\"\n\nfunction TaskDashboard({ user, onLogout }) {\n  const [tasks, setTasks] = useState([])\n  const [filter, setFilter] = useState(\"all\")\n  const [showForm, setShowForm] = useState(false)\n  const [editingTask, setEditingTask] = useState(null)\n\n  useEffect(() => {\n    const storedTasks = getTasks()\n    setTasks(storedTasks)\n  }, [])\n\n  useEffect(() => {\n    storeTasks(tasks)\n  }, [tasks])\n\n  const addTask = (taskData) => {\n    const newTask = {\n      id: Date.now(),\n      ...taskData,\n      completed: false,\n      createdAt: new Date().toISOString(),\n    }\n    setTasks([newTask, ...tasks])\n    setShowForm(false)\n  }\n\n  const updateTask = (taskId, updatedData) => {\n    setTasks(tasks.map((task) => (task.id === taskId ? { ...task, ...updatedData } : task)))\n    setEditingTask(null)\n  }\n\n  const deleteTask = (taskId) => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      setTasks(tasks.filter((task) => task.id !== taskId))\n    }\n  }\n\n  const toggleComplete = (taskId) => {\n    setTasks(tasks.map((task) => (task.id === taskId ? { ...task, completed: !task.completed } : task)))\n  }\n\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === \"completed\") return task.completed\n    if (filter === \"pending\") return !task.completed\n    return true\n  })\n\n  const taskCounts = {\n    all: tasks.length,\n    completed: tasks.filter((task) => task.completed).length,\n    pending: tasks.filter((task) => !task.completed).length,\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <div className=\"header-content\">\n          <div className=\"user-info\">\n            <h1>Welcome back, {user}!</h1>\n            <p>Manage your tasks efficiently</p>\n          </div>\n          <button onClick={onLogout} className=\"logout-btn\">\n            Logout\n          </button>\n        </div>\n      </header>\n\n      <main className=\"dashboard-main\">\n        <div className=\"dashboard-controls\">\n          <button onClick={() => setShowForm(true)} className=\"add-task-btn\" disabled={showForm || editingTask}>\n            + Add New Task\n          </button>\n\n          <TaskFilter currentFilter={filter} onFilterChange={setFilter} taskCounts={taskCounts} />\n        </div>\n\n        {showForm && <TaskForm onSubmit={addTask} onCancel={() => setShowForm(false)} />}\n\n        {editingTask && (\n          <TaskForm\n            task={editingTask}\n            onSubmit={(data) => updateTask(editingTask.id, data)}\n            onCancel={() => setEditingTask(null)}\n            isEditing={true}\n          />\n        )}\n\n        <TaskList\n          tasks={filteredTasks}\n          onEdit={setEditingTask}\n          onDelete={deleteTask}\n          onToggleComplete={toggleComplete}\n          currentFilter={filter}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default TaskDashboard\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}